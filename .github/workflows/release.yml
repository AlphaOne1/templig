# SPDX-FileCopyrightText: 2025 The templig contributors.
# SPDX-License-Identifier: MPL-2.0

name: Release

on:
    release:
        types:
            - published

permissions: read-all

concurrency:
    group: release-${{ github.event.release.tag_name }}
    cancel-in-progress: true

jobs:
    Build:
        permissions:
            contents: write
        runs-on: ubuntu-latest
        steps:
            - name: Harden Runner
              uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
              with:
                  egress-policy: audit

            - name: Checkout
              uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
              with:
                  fetch-depth: 0
                  ref: ${{ github.event.release.tag_name }}

            - name: Generate source archive
              shell: bash
              run: |
                  set -euo pipefail
                  TAG="${{ github.event.release.tag_name }}"
                  git archive \
                    --format=tar.gz \
                    --prefix="templig-src-${TAG}/" \
                    --output="templig-src-${TAG}.tar.gz" \
                    "${TAG}"

            - name: Upload Release (via GitHub CLI)
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              shell: bash
              run: |
                  set -euo pipefail
                  gh release upload "${{ github.event.release.tag_name }}" templig-src-*.tar.gz --clobber

    ChecksumReleaseAssets:
        needs: Build
        runs-on: ubuntu-latest
        name: Checksum Release Assets
        outputs:
            hashBase64File: ${{ steps.hashes.outputs.handle }}
        steps:
            - name: Harden Runner
              uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
              with:
                  egress-policy: audit

            - name: Checkout
              uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
              with:
                  fetch-depth: 0
                  ref: ${{ github.event.release.tag_name }}

            - name: Download all release assets via GitHub CLI
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  set -euo pipefail
                  
                  mkdir -p release-assets
                  cd release-assets
                  # gets all assets of the release
                  gh release download "${{ github.event.release.tag_name }}" --clobber
                  echo "Downloaded assets:"
                  ls -lah

            - name: Create checksums for artifacts and release tag (jq)
              id: hashes
              shell: bash
              working-directory: release-assets
              run: |
                set -euo pipefail

                NAME="git+https://github.com/${{ github.repository }}@refs/tags/${{ github.event.release.tag_name }}"
                DIGEST_HEX=`printf '%s' "${{ github.sha }}" | sha256sum | cut -d' ' -f1`

                tmp_json=`mktemp`

                # 1) Start JSON array with the tag/commit subject
                jq -n --arg name "$NAME" --arg sha "$DIGEST_HEX" \
                  '[{"name":$name,"digest":{"sha256":$sha}}]' > "$tmp_json"

                # 2) Build file subjects safely (NUL-separated), convert to JSON via jq, append
                files_json=`mktemp`
                LC_ALL=C find . -maxdepth 1 -type f -printf '%P\0' \
                  | sort -z \
                  | xargs -0 -I{} sh -c 'h=`sha256sum -- "{}" | cut -d" " -f1`; printf "%s\0%s\0" "$h" "{}"' \
                  | jq -Rs '
                      (split("\u0000") | .[:-1])                                # drop trailing empty element
                      | [ range(0; length; 2) as $i
                          | { "name": .[$i+1], "digest": { "sha256": .[$i] } }
                        ]
                    ' > "$files_json"

                # 3) Merge arrays
                jq -s 'add' "$tmp_json" "$files_json" > "$tmp_json.merged" && mv "$tmp_json.merged" "$tmp_json"

                # 4) Base64-encode once and output handle
                b64=`mktemp`
                base64 -w0 < "$tmp_json" > "$b64"
                echo "handle=$b64" >> "$GITHUB_OUTPUT"

    AssetProvenance:
        permissions:
            actions:  read  # Needed for detection of GitHub Actions environment.
            id-token: write # Needed for provenance signing and ID
            contents: write # Needed for release uploads
        needs: ChecksumReleaseAssets
        uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.1.0 #must have semver!
        with:
            base64-subjects: |
                ${{ needs.ChecksumReleaseAssets.outputs.hashBase64File }}
            upload-assets: true
            upload-tag-name: "${{ github.event.release.tag_name }}"
